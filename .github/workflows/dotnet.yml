name: Build and push docker image

on:
  push:
    branches:
      - main # Default release branch
    tags:
      - "!*"

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: build ClientApp
        run: |
          cd src/Sample.Chat/ClientApp
          npm install
          npm run build

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: package-version
        run: grep '<Version>' < src/Sample.Chat/Sample.Chat.csproj | echo "::set-output name=version::$(sed 's/.*<Version>\(.*\)<\/Version>/\1/')"
        id: get_package_version

      - name: set-version  
        run: echo "PACKAGE_VERSION=${{ steps.get_package_version.outputs.version }}" >> $GITHUB_ENV
         
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # -
      #   name: Login to DockerHub
      #   uses: docker/login-action@v1 
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ${{ secret.DOCKER_REGISTRY_URI }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            "${{ github.repository_owner }}/SampleChat:latest"
            "${{ github.repository_owner }}/SampleChat:${{ env.PACKAGE_VERSION }}"
      - name: package-version-to-git-tag
        uses: pkgdeps/git-tag-action@v2
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          github_repo: ${{ github.repository }}
          version: ${{ env.PACKAGE_VERSION }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"
      - name: Release Drafter
        id: release_drafter
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          version: ${{ env.PACKAGE_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

        